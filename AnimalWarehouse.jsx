import { useState, useEffect } from "react";

const AnimalWarehouse = () => {
    const [animals, setAnimals] = useState([]);

    useEffect(() => {
        fetch("https://localhost:7174/api/zoo/warehouse-animals", {
            method: 'GET',
            credentials: "include",
        })
            .then(response => {
                console.log("API válasz:", response.data);
                response.json()
            })   
            .then((data) => setAnimals(data))
            .catch((error) => console.error("Hiba történt:", error))
    }, []);


    const sellAnimal = async (id) => {
        try {
            const response = await fetch("https://localhost:7174/api/buy/remove-from-warehouse", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ warehouseAnimalId: id }), // Küldés JSON formátumban
                credentials: "include",
            });
                const data = await response.json();
            if (response.ok) {
                    alert(data.message); // Sikeres törlés üzenet
                    // Itt frissítheted a listát pl. egy új lekéréssel
            } else {
                    alert(data.message || "Hiba történt!");
            }
        } catch (error) {
                console.error("Hálózati hiba:", error);
                alert("Nem sikerült az állat eltávolítása.");
        }
    };

    const moveToZoo = (id) => {
        fetch('https://localhost:7174/api/buy/add-to-zoo', {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            credentials: "include",
            body: JSON.stringify({ warehouseAnimalId: id }),
        })
            .then((response) => response.json())
            .then(() => {
                setAnimals(animals.filter((animal) => animal.Id !== id));
            })
            .catch((error) => console.error("Hiba történt az áthelyezéskor:", error));
    };

    return (
        <div>
            <h2>Raktárban lévõ állatok</h2>
            <ul>
                {animals.map((animal) => (
                    <li key={animal.Id}>
                        <img src={animal.image} alt={animal.animalSpecies?.species} width="100" />
                        <p>Faj: {animal.animalSpecies?.species}</p>
                        <p>Nem: {animal.gender === 0 ? "Nõstény" : animal.gender === 1 ? "Hím" : "Kölyök"}</p>
                        <p>Érték: {animal.Value}</p>
                        <button onClick={() => moveToZoo(animal.Id)}>Állatkertbe helyezés</button>
                        <button onClick={() => sellAnimal(animal.Id)}>Eladás</button>
                    </li>
                ))}
            </ul>
        </div>
    );
};

export default AnimalWarehouse;